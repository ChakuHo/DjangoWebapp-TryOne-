"""
Django settings for marketplaceTry project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
import dj_database_url # Import dj_database_url to handle database URLs/main jastai ho database ko lagi


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-wup*h-h5nfgss(avhswut#41u-lz0jd&=*1%=o1gj_e$&%it*^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'https://djangowebapp-tryone.onrender.com',  # Add your production domain here
    '127.0.0.1',  # Localhost for development
    'localhost',  # Localhost for development    
]


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'products.apps.ProductsConfig',
    'blog.apps.BlogConfig',
    'pages.apps.PagesConfig',
    'django_extensions',
    'sitesetting.apps.SitesettingConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Add WhiteNoise middleware for static files
]

ROOT_URLCONF = 'marketplaceTry.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')], #this needs to be added to point to the templates directory
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'sitesetting.context_processors.site_settings',  # Add this line to include site settings
                'pages.context_processors.all_pages', #pages ma vako content sabai pagees ma dekhauna lai
            ],
        },
    },
]

WSGI_APPLICATION = 'marketplaceTry.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES ={  #yo bracket add gareko ho hai
     'default':{
    #  dj_database_url.config(
    #   # chanage gareko bracket lai plus dj_database_url.config( yeti line add gareko
    #     default=os.environ.get('DATABASE_URL')
                'ENGINE': 'django.db.backends.sqlite3',
                'NAME': BASE_DIR / 'db.sqlite3', 
     }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/


STATICFILES_DIRS = [
    BASE_DIR / "static", # This line will look into /static for css, js, images
]

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Media Urls(static files js, css, images)

MEDIA_URL = '/media/' # URL path to access media files in browser
MEDIA_ROOT = BASE_DIR / 'media' # Where files are physically stored on disk

# media files that user uploads of products

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

#yoo add gareko ho to use WhiteNoise for serving static files in production plus deploy garne ko step ho yo ni
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Directory where static files will be collected/destination for static files
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'  # Use WhiteNoise for static files storage

CSRF_TRUSTED_ORIGINS = [
    'https://djangowebapp-tryone.onrender.com',  # Add your production domain here
]